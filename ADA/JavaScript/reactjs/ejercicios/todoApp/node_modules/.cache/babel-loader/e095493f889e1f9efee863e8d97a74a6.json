{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ivana.yegros.kubicka\\\\Documents\\\\miRepo\\\\ADA\\\\JavaScript\\\\reactjs\\\\ejercicios\\\\todoApp\\\\src\\\\Screens\\\\Tareas\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { api } from '../../utils';\nimport { Layout, Main } from \"../../components\";\nimport { objectToArray } from \"../../helpers\";\nimport { Card } from './components';\nimport 'tareas.css'; //le paso el valor de un array porque el objeto que en el cual voy a hacer el map es un array. antes de hacer el map\n//en linea 8 si no le paso el array vacio me va a tirar error de undefined, porque no se puede hacer map de undefinded (lo tengo que llenar con array)\n\nexport const Tareas = () => {\n  _s();\n\n  const [tareas, setTareas] = useState([]);\n\n  const handleOnClick = () => {\n    window.open(\"http://localhost:3000/agregar\");\n  };\n\n  const traer = () => {\n    api.get(\"/tareas.json\").then(response => {\n      const datos = objectToArray(response.data); //a tareas le asigno el valor de datos a traves de setTareas (le cambio de un estado vacio a contener datos)\n\n      setTareas(datos);\n    }).catch(error => console.log(error));\n  }; //uso udeEffect para evitar que se me recorra infinitas veces.\n\n\n  useEffect(() => {\n    //meto la funcion dentro de useEffect\n    traer();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      titulo: \"Mis Tareas\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [tareas.map(({\n          titulo,\n          descripcion,\n          asignado,\n          fecha,\n          status,\n          id\n        }) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            titulo: titulo,\n            descripcion: descripcion,\n            asignado: asignado,\n            fecha: fecha,\n            status: status,\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-dark mt-2\",\n            onClick: handleOnClick,\n            children: \"Agregar Tarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tareas, \"JZ37RroqkD5G4jx2AuDQKHVz1nE=\");\n\n_c = Tareas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tareas\");","map":{"version":3,"sources":["C:/Users/ivana.yegros.kubicka/Documents/miRepo/ADA/JavaScript/reactjs/ejercicios/todoApp/src/Screens/Tareas/index.jsx"],"names":["React","useState","useEffect","api","Layout","Main","objectToArray","Card","Tareas","tareas","setTareas","handleOnClick","window","open","traer","get","then","response","datos","data","catch","error","console","log","map","titulo","descripcion","asignado","fecha","status","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,kBAA7B;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAO,YAAP,C,CAEA;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,aAAa,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,IAAP,CAAY,+BAAZ;AACH,GAFD;;AAIA,QAAMC,KAAK,GAAG,MAAM;AAChBX,IAAAA,GAAG,CACEY,GADL,CACS,cADT,EAEKC,IAFL,CAEWC,QAAD,IAAc;AAChB,YAAMC,KAAK,GAAGZ,aAAa,CAACW,QAAQ,CAACE,IAAV,CAA3B,CADgB,CAEhB;;AACAT,MAAAA,SAAS,CAACQ,KAAD,CAAT;AAEH,KAPL,EAQKE,KARL,CAQYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARtB;AASH,GAVD,CAPwB,CAkBxB;;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAY,IAAAA,KAAK;AACR,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,YAAb;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBACKL,MAAM,CAACe,GAAP,CAAW,CAAC;AAAEC,UAAAA,MAAF;AAAUC,UAAAA,WAAV;AAAuBC,UAAAA,QAAvB;AAAiCC,UAAAA,KAAjC;AAAwCC,UAAAA,MAAxC;AAAgDC,UAAAA;AAAhD,SAAD,KAA0D;AAClE,8BACI,QAAC,IAAD;AACI,YAAA,MAAM,EAAEL,MADZ;AAEI,YAAA,WAAW,EAAEC,WAFjB;AAGI,YAAA,QAAQ,EAAEC,QAHd;AAII,YAAA,KAAK,EAAEC,KAJX;AAKI,YAAA,MAAM,EAAEC,MALZ;AAMI,YAAA,EAAE,EAAEC;AANR;AAAA;AAAA;AAAA;AAAA,kBADJ;AAUH,SAXA,CADL,eAeI;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAsC,YAAA,OAAO,EAAEnB,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAjDM;;GAAMH,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { api } from '../../utils'\r\nimport { Layout, Main } from \"../../components\"\r\nimport { objectToArray } from \"../../helpers\"\r\nimport { Card } from './components'\r\nimport 'tareas.css'\r\n\r\n//le paso el valor de un array porque el objeto que en el cual voy a hacer el map es un array. antes de hacer el map\r\n//en linea 8 si no le paso el array vacio me va a tirar error de undefined, porque no se puede hacer map de undefinded (lo tengo que llenar con array)\r\n\r\nexport const Tareas = () => {\r\n    const [tareas, setTareas] = useState([])\r\n\r\n    const handleOnClick = () => {\r\n        window.open(\"http://localhost:3000/agregar\")\r\n    }\r\n\r\n    const traer = () => {\r\n        api\r\n            .get(\"/tareas.json\")\r\n            .then((response) => {\r\n                const datos = objectToArray(response.data);\r\n                //a tareas le asigno el valor de datos a traves de setTareas (le cambio de un estado vacio a contener datos)\r\n                setTareas(datos)\r\n\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n    //uso udeEffect para evitar que se me recorra infinitas veces.\r\n    useEffect(() => {\r\n        //meto la funcion dentro de useEffect\r\n        traer();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout>\r\n            <Main titulo='Mis Tareas'>\r\n                <div className='row'>\r\n                    {tareas.map(({ titulo, descripcion, asignado, fecha, status, id }) => {\r\n                        return (\r\n                            <Card\r\n                                titulo={titulo}\r\n                                descripcion={descripcion}\r\n                                asignado={asignado}\r\n                                fecha={fecha}\r\n                                status={status}\r\n                                id={id}\r\n                            />\r\n                        )\r\n                    })\r\n\r\n                    }\r\n                    <div>\r\n                        <button className='btn btn-dark mt-2' onClick={handleOnClick}>Agregar Tarea</button>\r\n                    </div>\r\n                </div>\r\n            </Main>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}