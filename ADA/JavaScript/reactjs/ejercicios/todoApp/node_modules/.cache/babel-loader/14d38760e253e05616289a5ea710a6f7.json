{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ivana.yegros.kubicka\\\\Documents\\\\miRepo\\\\ADA\\\\JavaScript\\\\reactjs\\\\ejercicios\\\\todoApp\\\\src\\\\Screens\\\\Tareas\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { api } from '../../utils';\nimport { Layout, Main } from \"../../components\";\nimport { objectToArray } from \"../../helpers\"; //le paso el valor de un array porque el objeto que en el cual voy a hacer el map es un array. antes de hacer el map\n//en linea 8 si no le paso el array vacio me va a tirar error de undefined, porque no se puede hacer map de undefinded (lo tengo que llenar con array)\n\nexport const Tareas = () => {\n  _s();\n\n  const [tareas, setTareas] = useState([]);\n\n  const handleOnClick = () => {\n    window.open(\"http://localhost:3000/agregar\");\n  };\n\n  const traer = () => {\n    api.get(\"/tareas.json\").then(response => {\n      const datos = objectToArray(response.data); //a tareas le asigno el valor de datos a traves de setTareas (le cambio de un estado vacio a contener datos)\n\n      setTareas(datos);\n    }).catch(error => console.log(error));\n  }; //uso udeEffect para evitar que se me recorra infinitas veces.\n\n\n  useEffect(() => {\n    traer();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      titulo: \"Mis Tareas\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card text-dark bg-light mb-3\",\n          style: {\n            width: \"18rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-secondary text-light\",\n            children: fecha\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: tarea.titulo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Descripcion: \", tarea.descripcion]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text text-secondary\",\n              children: [\"Asignado: \", tarea.asignado]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info mt-2\",\n          onClick: handleOnClick,\n          children: \"Agregar Tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tareas, \"JZ37RroqkD5G4jx2AuDQKHVz1nE=\");\n\n_c = Tareas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tareas\");","map":{"version":3,"sources":["C:/Users/ivana.yegros.kubicka/Documents/miRepo/ADA/JavaScript/reactjs/ejercicios/todoApp/src/Screens/Tareas/index.jsx"],"names":["React","useState","useEffect","api","Layout","Main","objectToArray","Tareas","tareas","setTareas","handleOnClick","window","open","traer","get","then","response","datos","data","catch","error","console","log","width","fecha","tarea","titulo","descripcion","asignado"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,kBAA7B;AACA,SAASC,aAAT,QAA8B,eAA9B,C,CAEA;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMS,aAAa,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,IAAP,CAAY,+BAAZ;AACH,GAFD;;AAIA,QAAMC,KAAK,GAAG,MAAM;AAChBV,IAAAA,GAAG,CACEW,GADL,CACS,cADT,EAEKC,IAFL,CAEWC,QAAD,IAAc;AAChB,YAAMC,KAAK,GAAGX,aAAa,CAACU,QAAQ,CAACE,IAAV,CAA3B,CADgB,CAEhB;;AACAT,MAAAA,SAAS,CAACQ,KAAD,CAAT;AAEH,KAPL,EAQKE,KARL,CAQYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARtB;AASH,GAVD,CAPwB,CAkBxB;;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,KAAK;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,YAAb;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,8BAAf;AAA8C,UAAA,KAAK,EAAE;AAAEU,YAAAA,KAAK,EAAE;AAAT,WAArD;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,qCAAf;AAAA,sBAAsDC;AAAtD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA,qCAAgC;AAAA,0BAAIC,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,0CAAuCD,KAAK,CAACE,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAG,cAAA,SAAS,EAAC,0BAAb;AAAA,uCAAmDF,KAAK,CAACG,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAElB,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA1CM;;GAAMH,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { api } from '../../utils'\r\nimport { Layout, Main } from \"../../components\"\r\nimport { objectToArray } from \"../../helpers\"\r\n\r\n//le paso el valor de un array porque el objeto que en el cual voy a hacer el map es un array. antes de hacer el map\r\n//en linea 8 si no le paso el array vacio me va a tirar error de undefined, porque no se puede hacer map de undefinded (lo tengo que llenar con array)\r\n\r\nexport const Tareas = () => {\r\n    const [tareas, setTareas] = useState([])\r\n\r\n    const handleOnClick = () => {\r\n        window.open(\"http://localhost:3000/agregar\")\r\n    }\r\n\r\n    const traer = () => {\r\n        api\r\n            .get(\"/tareas.json\")\r\n            .then((response) => {\r\n                const datos = objectToArray(response.data);\r\n                //a tareas le asigno el valor de datos a traves de setTareas (le cambio de un estado vacio a contener datos)\r\n                setTareas(datos)\r\n\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n    //uso udeEffect para evitar que se me recorra infinitas veces.\r\n    useEffect(() => {\r\n        traer();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout>\r\n            <Main titulo='Mis Tareas'>\r\n                <div className='container'>\r\n                    <div className=\"card text-dark bg-light mb-3\" style={{ width: \"18rem\" }}>\r\n                        <div className=\"card-header bg-secondary text-light\">{fecha}</div>\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title mb-4\"><b>{tarea.titulo}</b></h4>\r\n                            <p className=\"card-text\">Descripcion: {tarea.descripcion}</p>\r\n                            <p className=\"card-text text-secondary\">Asignado: {tarea.asignado}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button className='btn btn-info mt-2' onClick={handleOnClick}>Agregar Tarea</button>\r\n                </div>\r\n            </Main>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}