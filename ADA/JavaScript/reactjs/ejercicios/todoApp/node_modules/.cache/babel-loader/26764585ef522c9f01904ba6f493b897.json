{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ivana.yegros.kubicka\\\\Documents\\\\miRepo\\\\ADA\\\\JavaScript\\\\reactjs\\\\ejercicios\\\\todoApp\\\\src\\\\screens\\\\Private\\\\Users\\\\List\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { api } from \"../../../../utils\";\nimport { useTranslation } from \"react-i18next\";\nimport { Layout, Main } from \"../../../../components\";\nimport { objectToArray } from \"../../../../helpers\";\nimport { TableUsers } from \"./components\";\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\n\nconst User = () => {\n  _s();\n\n  const [t] = useTranslation(\"global\");\n  const [users, setUsers] = useState([]);\n\n  const getApi = () => {\n    api.get(\"/users.json\").then(response => {\n      const data = objectToArray(response.data);\n      setUsers(data);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    getApi();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      showButton: true,\n      title: t(\"main.titleUser\"),\n      txt: t(\"main.btnuser\"),\n      link: '/addUsers',\n      className: \"bg-light main\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          \"p-5\": true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: t(\"form.name\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: t(\"form.lastName\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: t(\"form.email\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: t(\"form.password\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), users.map(({\n            name,\n            lastName,\n            email,\n            password\n          }) => {\n            return /*#__PURE__*/_jsxDEV(TableUsers, {\n              name: name,\n              lastName: lastName,\n              email: email,\n              password: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(User, \"aHNJdRMrff3ehn4evQa2NZfYoHE=\", false, function () {\n  return [useTranslation];\n});\n\n_c = User;\nexport { User };\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/Users/ivana.yegros.kubicka/Documents/miRepo/ADA/JavaScript/reactjs/ejercicios/todoApp/src/screens/Private/Users/List/index.js"],"names":["React","useState","useEffect","api","useTranslation","Layout","Main","objectToArray","TableUsers","Table","Container","User","t","users","setUsers","getApi","get","then","response","data","catch","error","console","log","map","name","lastName","email","password"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,wBAA7B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,CAAD,IAAMR,cAAc,CAAC,QAAD,CAA1B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMc,MAAM,GAAG,MAAM;AACjBZ,IAAAA,GAAG,CACEa,GADL,CACS,aADT,EAEKC,IAFL,CAEWC,QAAD,IAAc;AAChB,YAAMC,IAAI,GAAGZ,aAAa,CAACW,QAAQ,CAACC,IAAV,CAA1B;AACAL,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACH,KALL,EAMKC,KANL,CAMYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CANtB;AAOH,GARD;;AAUAnB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,MAAM;AACT,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,UAAU,EAAE,IAAlB;AAAwB,MAAA,KAAK,EAAEH,CAAC,CAAC,gBAAD,CAAhC;AAAoD,MAAA,GAAG,EAAEA,CAAC,CAAC,cAAD,CAA1D;AAA4E,MAAA,IAAI,EAAG,WAAnF;AAAiG,MAAA,SAAS,EAAE,eAA5G;AAAA,6BACI,QAAC,SAAD;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,OAAO,MAAd;AAAe,UAAA,QAAQ,MAAvB;AAAwB,UAAA,KAAK,MAA7B;AAA8B,qBAA9B;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA,mCACI;AAAA,sCACI;AAAA,0BAAKA,CAAC,CAAC,WAAD;AAAN;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKA,CAAC,CAAC,eAAD;AAAN;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAKA,CAAC,CAAC,YAAD;AAAN;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA,0BAAKA,CAAC,CAAC,eAAD;AAAN;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,EASKC,KAAK,CAACW,GAAN,CAAU,CAAC;AAAEC,YAAAA,IAAF;AAAQC,YAAAA,QAAR;AAAkBC,YAAAA,KAAlB;AAAyBC,YAAAA;AAAzB,WAAD,KAAyC;AAChD,gCACI,QAAC,UAAD;AAAY,cAAA,IAAI,EAAEH,IAAlB;AAAwB,cAAA,QAAQ,EAAEC,QAAlC;AAA4C,cAAA,KAAK,EAAEC,KAAnD;AAA0D,cAAA,QAAQ,EAAEC;AAApE;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJA,CATL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAxCD;;GAAMjB,I;UACUP,c;;;KADVO,I;AA0CN,SAASA,IAAT","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { api } from \"../../../../utils\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Layout, Main } from \"../../../../components\";\r\nimport { objectToArray } from \"../../../../helpers\";\r\nimport { TableUsers } from \"./components\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n\r\nconst User = () => {\r\n    const [t] = useTranslation(\"global\");\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const getApi = () => {\r\n        api\r\n            .get(\"/users.json\")\r\n            .then((response) => {\r\n                const data = objectToArray(response.data);\r\n                setUsers(data);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getApi();\r\n    }, []);\r\n    return (\r\n        <Layout>\r\n            <Main showButton={true} title={t(\"main.titleUser\")} txt={t(\"main.btnuser\")} link={('/addUsers')} className={\"bg-light main\"} >\r\n                <Container>\r\n                    <Table striped bordered hover p-5>\r\n                        <thead className=\"text-center\">\r\n                            <tr>\r\n                                <th>{t(\"form.name\")}</th>\r\n                                <th>{t(\"form.lastName\")}</th>\r\n                                <th>{t(\"form.email\")}</th>\r\n                                <th>{t(\"form.password\")}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {users.map(({ name, lastName, email, password }) => {\r\n                            return (\r\n                                <TableUsers name={name} lastName={lastName} email={email} password={password} />\r\n                            );\r\n                        })}\r\n                    </Table>\r\n                </Container>\r\n            </Main>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport { User };"]},"metadata":{},"sourceType":"module"}